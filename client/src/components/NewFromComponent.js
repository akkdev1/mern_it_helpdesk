import React from 'react'
import { useState } from "react" //‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô State ‡∏´‡∏£‡∏∑‡∏≠ ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ ‡πÉ‡∏ô React 
import { NavbarComponent } from "./NavbarComponent"
import axios from "axios";
import Swal from 'sweetalert2'
import { useNavigate } from "react-router-dom"


function NewFromComponent() {

    //‡∏™‡∏£‡∏≤‡πâ‡∏á State ‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö "Object" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å Form ‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö Object (‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏õ‡πá‡∏ô Null)
    const [stateTicket, setStateTicket] = useState({
        title: "", content: "", requester: "", department: "", contact: "",
        remark: "", status: "", itstaff: "", itnote: ""
    })

    // Function ‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö Event OnChange ‡πÉ‡∏ô‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÅ‡∏•‡πâ‡∏ß Set ‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡πâ State Type Object 
    const checkInput = input_name => event => {
        console.log(input_name, '=', event.target.value)
        //Spread Operators ‡πÅ‡∏à‡∏Å‡∏Ñ‡πà‡∏≤‡∏•‡∏á
        setStateTicket({ ...stateTicket, [input_name]: event.target.value })
    }
    // eslint-disable-next-line

    // Clear ‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°--------------------------------
    const clearForm = (event) => {
        event.preventDefault();
        //‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå State
        setStateTicket({
            title: "", content: "", requester: "", department: "", contact: "",
            remark: "", status: "", itstaff: "", itnote: ""
        })
    }

    // Auto Redirect : ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏´‡∏•‡∏±‡∏á‡∏°‡∏µ‡∏Å‡∏≤‡∏£ Submit Form 
    const navigate = useNavigate()

    // Function ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡πà‡∏≤ State  ‡∏•‡∏á MONGO DB--------------------------------
    const submitForm = (event) => {
        event.preventDefault();

        // DEBUG Stage ----------------------------------
        // console.table({
        //     title: stateTicket.title,
        //     content: stateTicket.content,
        //     requester: stateTicket.requester,
        //     department: stateTicket.department,
        //     contact: stateTicket.contact,
        //     remark: stateTicket.remark,
        // })
        // Debug ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡πà‡∏≤ API URL ‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå .env
        //console.log("API URL", process.env.REACT_APP_API) ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡∏¥‡∏î-‡∏õ‡∏¥‡∏î server 

        //-------‡∏¢‡∏¥‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• API  ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á MongoDB----------------------------------------

        axios.post(`${process.env.REACT_APP_API}/create`,
            {
                title: stateTicket.title,
                content: stateTicket.content,
                requester: stateTicket.requester,
                department: stateTicket.department,
                contact: stateTicket.contact,
                remark: stateTicket.remark,
                // status: stateTicket.status,
                // itstaff: stateTicket.itstaff,
                // itnote: stateTicket.itnote,

            })
            .then(response => {
                //alert("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢") 
                Swal.fire('Ticket Created!', '‡πÅ‡∏à‡πâ‡∏á‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢', 'success')

                //‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå State
                setStateTicket({
                    title: "", content: "", requester: "", department: "", contact: "",
                    remark: "", status: "", itstaff: "", itnote: ""
                })

                navigate('/')

            })
            .catch(err => {
                //alert(err.response.data.error) 
                Swal.fire({
                    icon: 'error', title: 'Oops...', text: err.response.data.error, footer: '<a href="">Why do I have this issue?</a>'
                })
            })
    }


    //--------------------------------------View---------------------------------
    return (
        <div className="container p-5">
            <NavbarComponent />
            <h1>New IT Service Request | Ticket : Information</h1>
            <hr></hr>
            {/* {JSON.stringify(stateTicket)} */}
            <hr></hr>
            <form onSubmit={submitForm}>
                <div className="form-group">
                    <label>‡∏õ‡∏±‡∏ç‡∏´‡∏≤|‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ : Issue | Request ‚úí</label>
                    <input type="text" className="form-control" value={stateTicket.title}
                        onChange={checkInput("title")} />
                </div>

                <div className="form-group">
                    <label>‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤|‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î : Content | Description üìù</label>
                    <textarea className="form-control" value={stateTicket.content}
                        onChange={checkInput("content")}
                    />
                </div>

                <div className="form-group">
                    <label>‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÅ‡∏à‡πâ‡∏á‡∏õ‡∏±‡∏ç‡∏´‡∏≤ : Requester üë¶</label>
                    <input type="text" className="form-control" value={stateTicket.requester}
                        onChange={checkInput("requester")}
                    />
                </div>

                <div className="form-group">
                    <label>‡∏™‡∏±‡∏á‡∏Å‡∏±‡∏î‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô : Department üèö</label>
                    <input type="text" className="form-control" value={stateTicket.department}
                        onChange={checkInput("department")}
                    />
                </div>

                <div className="form-group">
                    <label>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö : Contact info üìûüìß</label>
                    <input type="text" className="form-control" value={stateTicket.contact}
                        onChange={checkInput("contact")}
                    />
                </div>

                <div className="form-group">
                    <label>‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° : Remark</label>
                    <textarea className="form-control" value={stateTicket.remark}
                        onChange={checkInput("remark")}
                    />
                </div>
                <input type="submit" className="btn btn-success mr-1" value="‡∏™‡πà‡∏á‡∏õ‡∏±‡∏ç‡∏´‡∏≤ | Submit Ticket" />
                <input type="#" className="btn btn-primary mr-1" defaultValue="‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏ü‡∏≠‡∏£‡πå‡∏° | Reset" onClick={clearForm} />
                <hr></hr>
                <p> ------- ‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà | IT Officer information ------</p>
                <hr></hr>
                <div className="form-group">
                    <label>‡∏à‡∏ô‡∏ó.IT | IT Staff</label>
                    <label>{stateTicket.itstaff}</label>
                </div>

                <div className="form-group">
                    <label>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏á‡∏≤‡∏ô | IT Note</label>
                    <label>{stateTicket.itnote}</label>
                </div>

                <div className="form-group">
                    <label>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏á‡∏≤‡∏ô | Process Status</label>
                    <label>{stateTicket.status}</label>
                </div>

            </form>
        </div>
    )
}

export default NewFromComponent