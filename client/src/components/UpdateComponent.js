import React from 'react'
import { NavbarComponent } from "./NavbarComponent"
import { useState, useEffect } from "react"
import axios from "axios";
import { useParams, useNavigate } from "react-router-dom";
import Swal from 'sweetalert2'

const UpdateComponent = () => {

    //1 ‡∏™‡∏£‡∏≤‡πâ‡∏á State ‡πÅ‡∏ö‡∏ö Object ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å Form ‡∏ó‡∏±‡πâ‡∏á 3 ‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö Object (‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡∏ß‡πà‡∏≤‡∏á)
    const [stateTicket, setStateTicket] = useState({
        title: "", content: "", requester: "", department: "", contact: "",
        remark: "", status: "", itstaff: "", itnote: "", slug: ""
    })

    // 2 ‡πÉ‡∏ä‡πâ Param ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤ Slug 
    const param = useParams();

    // 3  ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Blog ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£  ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô Single
    useEffect(() => {

        //3-1 ‡∏¢‡∏¥‡∏á API ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà 1 ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô 
        axios
            .get(`${process.env.REACT_APP_API}/tickets/${param.slug}`)

            //3-2 Data response Set ‡∏•‡∏á‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ stateTicket
            .then(api_res_data => { setStateTicket(api_res_data.data) })
            .catch(err => alert(err))

        // ‡∏Å‡∏≤‡∏£ Scroll ‡πÑ‡∏õ‡∏ö‡∏ô‡∏™‡∏∏‡∏î
        window.scrollTo(0, 0)

        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [])

    //===========================================================================
    //======================UpdateForm = ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡πà‡∏ô‡∏û‡∏¥‡πÄ‡∏®‡∏© ()=>() ===========================

    const showUpdateForm = () => (
        <form onSubmit={submitForm}>
            <div className="form-group">
                <label>‡∏õ‡∏±‡∏ç‡∏´‡∏≤|‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ : Issue | Request ‚úí</label>
                <input disabled type="text" className="form-control" value={stateTicket.title}
                    onChange={checkInput("title")} />
            </div>

            <div className="form-group">
                <label>‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤|‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î : Content | Description üìù</label>
                <textarea disabled className="form-control" value={stateTicket.content}
                    onChange={checkInput("content")}
                />
            </div>

            <div className="form-group">
                <label>‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÅ‡∏à‡πâ‡∏á‡∏õ‡∏±‡∏ç‡∏´‡∏≤ : Requester üë¶</label>
                <input disabled type="text" className="form-control" value={stateTicket.requester}
                    onChange={checkInput("requester")}
                />
            </div>

            <div className="form-group">
                <label>‡∏™‡∏±‡∏á‡∏Å‡∏±‡∏î‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô : Department üèö</label>
                <input disabled type="text" className="form-control" value={stateTicket.department}
                    onChange={checkInput("department")}
                />
            </div>

            <div className="form-group">
                <label>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö : Contact info üìûüìß</label>
                <input type="text" className="form-control" value={stateTicket.contact}
                    onChange={checkInput("contact")}
                />
            </div>

            <div className="form-group">
                <label>‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° : Remark</label>
                <textarea className="form-control" value={stateTicket.remark}
                    onChange={checkInput("remark")}
                />
            </div>


            <input type="submit" className="btn btn-success mr-1" value="‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• | Save" />
            <input type="#" className="btn btn-primary mr-1" defaultValue="‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å | Cancel" onClick={navigateHome} />
            <hr></hr>
            <p> ------- ‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà | IT Officer information ------</p>
            <hr></hr>

            <div className="form-group">
                <label>‡∏à‡∏ô‡∏ó.IT | IT Staff</label>
                <input type="text" className="form-control" value={stateTicket.itstaff}
                    onChange={checkInput("itstaff")}
                />
            </div>

            <div className="form-group">
                <label>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏á‡∏≤‡∏ô | IT Note</label>
                <textarea className="form-control" value={stateTicket.itnote}
                    onChange={checkInput("itnote")}
                />
            </div>

            <div className="form-group">
                <label>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏á‡∏≤‡∏ô | Process Status</label>&nbsp;
                <select style={{ backgroundColor: "" }} className="form-control" value={stateTicket.status} onChange={checkInput("status")} >
                    <option value="New Request">New Request</option>
                    <option value="In Progress">In Progress</option>
                    <option value="Completed">Completed</option>
                </select>
            </div>
        </form >
    )

    //=========================== Update PART===================================
    //==========================================================================
    // Function ‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö Event OnChange ‡πÉ‡∏ô‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÅ‡∏•‡πâ‡∏ß Set ‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡πâ State Type Object 
    const checkInput = input_name => event => {
        console.log(input_name, '=', event.target.value)
        //Spread Operators ‡πÅ‡∏à‡∏Å‡∏Ñ‡πà‡∏≤‡∏•‡∏á
        setStateTicket({ ...stateTicket, [input_name]: event.target.value })
    }
    // eslint-disable-next-line

    // Function ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡πà‡∏≤ State  ‡∏•‡∏á MONGO DB--------------------------------
    const submitForm = (event) => {

        event.preventDefault();
        const slug = param.slug

        //-------‡∏¢‡∏¥‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• API  ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á MongoDB----------------------------------------

        axios.put(`${process.env.REACT_APP_API}/tickets/update/${slug}`,
            {
                title: stateTicket.title,
                content: stateTicket.content,
                requester: stateTicket.requester,
                department: stateTicket.department,
                contact: stateTicket.contact,
                remark: stateTicket.remark,
                status: stateTicket.status,
                itstaff: stateTicket.itstaff,
                itnote: stateTicket.itnote,
            })
            .then(response => {

                //alert("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢") 
                Swal.fire('Ticket Updated!', 'Update ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢', 'success')

                //‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå State
                setStateTicket({
                    title: "", content: "", requester: "", department: "", contact: "",
                    remark: "", status: "", itstaff: "", itnote: ""
                })

                navigate('/')


            })
            .catch(err => {
                //alert(err.response.data.error) 
                Swal.fire({
                    icon: 'error', title: 'Oops...', text: err.response.data.error, footer: '<a href="">Why do I have this issue?</a>'
                })
            })
    }

    // Auto Redirect : ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏´‡∏•‡∏±‡∏á‡∏°‡∏µ‡∏Å‡∏≤‡∏£ Submit Form 
    const navigate = useNavigate()
    const navigateHome = () => {
        navigate('/')
    }


    //=================  View ===============================
    return (
        <div className="container p-5">
            <NavbarComponent />
            <h1>Update | Edit : {stateTicket.title}</h1>
            <hr></hr>
            {/* <div>{JSON.stringify(stateTicket)}</div> */}
            <hr></hr>

            {/* ‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏° ShowUpdate ‡∏™‡∏£‡∏≤‡πâ‡∏á‡πÄ‡∏õ‡πá‡∏ô Function JSX  */}
            {showUpdateForm()}

        </div>

    )
}

export default UpdateComponent